export default {
  help: 'Help',
  back: 'Back',
  continue: 'Continue',
  create: 'Create',
  ok: 'Ok',
  signUp: 'Sign Up',
  logIn: 'Log In',
  carousel1: 'Access your earned wages - whenever you need to',
  carousel2: 'Improve your financial well-being',
  carousel3: 'Cover unexpected costs and avoid expensive loans ',
  networkError: 'Network Error',
  unauthorized: 'Unauthorized',
  internalServerError: 'Internal Server Error',
  somethingWentWrong: 'Something went wrong',
  validationError: 'Validation Error',
  success: 'Success',
  error: 'Error',
  info: 'Info',
  registrationId: 'Registration ID',
  errorEnterEmployeeId: 'Please enter your Employee ID',
  email: 'Email',
  password: 'Password',
  emailAddress: 'Email address',
  errorCheckEmail: 'Error occurred. Please check your email!',
  createPassword: 'Create a password',
  shouldReceiveRegistrationId: 'You should have received your Registration ID in the welcome email. If you have lost it, or can’t remember it, contact us.',
  useWorkEmail: 'If available, please use your work email address, so that your Employer can verify you faster.',
  createSecurePassword: 'Please create a secure password including the following criteria above.',
  savePassword: 'Save password',
  errorPasswordNotMatch: 'Your password does not match the requirements.',
  dataPrivacy: 'Data Privacy',
  needConsent: 'In order for Floos to continue and pay out your wages ahead of time, Floos needs your consent in order to receive the necessary data from your employer.',
  iHaveRead: 'I have read the ',
  guidelines: 'guidelines and accept them.',
  next: 'Next',
  useYourFaceId: 'Use your Face ID',
  pleaseEnterCode: 'Please enter the verification code you received via email.',
  wrongEmail: 'Wrong email?',
  confirm: 'Confirm',
  sendEmailAgain: 'Send the email again',
  eightOrMoreChars: '8 characters',
  oneLowercase: 'lower case',
  oneUppercase: 'upper case',
  oneNumericChar: 'number',
  oneSpecialChar: 'special character',
  emailVerification: '1. Email verification',
  employeeVerification: '2. Employee verification',
  waitingTime: 'Waiting time: up to ',
  days: ' days',
  congratulationsVerification: 'Congratulations, your verification is complete!',
  forgotPassword: 'Forgot Password?',
  newPasswordCreated: 'A new password was created!Please log in into your account.',
  enterEmailForgotPassword: 'Enter your email address associated with your account. We will email you a link to create a new password.',
  send: 'Send',
  verificationUnsuccessful: 'Verification was unsuccessful.',
  please: 'Please ',
  withdraw: 'Withdraw',
  availableToWithdraw: 'available to withdraw',
  withdrawn: 'withdrawn',
  earnedUntilToday: 'earned until today',
  aed: 'AED',
  getStarted: 'Get Started',
  contactUs: 'Contact us',
  enterVerificationCode: 'Enter Verification Code',
  weSentEmail: 'We’ve sent you an email with a 5-digit verification code. Please use the code provided in the email to activate your account.',
  yourEmployerWillConfirm: 'Your employer will confirm your registration.',
  weWillNotifyYou: 'We will notify you when the process is complete',
  emailVerificationRequested: 'Email verification requested!',
  youReceivedEmail: 'You received the email from us.',
  useCode: 'Please use the code provided in the email to activate your account.',
  emailSent: 'Email sent',
  checkInbox: 'Check your inbox',
  hi: 'Hi, ',
  goodToKnow: 'GOOD TO KNOW',
  dashboard: 'Dashboard',
  transactions: 'Transactions',
  profile: 'Profile',
  availableSumInfo: (withdrawable, earned) =>
    `Availiable sum to withdraw is ${withdrawable} AED.  It is calculated from the earned sum, which ${earned} AED.`,
  sumWasPayoutInfo: 'The sum which was payout.',
  salaryEarnedInfo: 'The salary which you have earned till this period of time.',
  personalInformation: 'Personal Information',
  informationReceived: 'Here\'s the information we received from your employer.',
  name: 'Name',
  iban: 'IBAN',
  ifNotAccurate: 'If this is not accurate, please ',
  contactUsImmediately: 'contact us immediately.',
  confirmWithdrawal: 'Confirm Withdrawal',
  withdrawalAmount: 'Withdrawal Amount',
  minimalWithdrawableSum: (amount) => `Minimal withdrawable sum ${amount} AED`,
  plusServiceCharge: (amount) => `+ ${amount} AED Service Charge`,
  otherAmount: 'Other Amount',
  cantWithdrawLess: (amount) => `Unfortunately you can’t withdraw less than ${amount} AED.`,
  cantWithdrawMore: (amount) => `You can’t withdraw more than ${amount} AED.`,
  totalAvailableAmount: (amount) => `Total available amount (${amount} AED)`,
  requestOverview: 'REQUEST OVERVIEW',
  requestedWithdrawal: 'Requested withdrawal',
  serviceCharge: 'Service charge',
  totalSalaryDeduction: 'Total salary deduction',
  yourRequestConfirmed: 'Your request has been confirmed!',
  itShouldntTakeTooLong: 'It should’t take too long to process it.',
  transactionHistory: 'Transaction History',
  failed: 'Failed',
  pending: 'Pending',
  completed: 'Completed',
  noTransactionsYet: 'No transactions to report yet',
  easyToRequestPayout: 'It\'s so easy to request a payout, try now. Don\'t worry, the first withdrawal is on us.',
  transactionsInformation: 'Transactions Information',
  amount: 'amount',
  dateTime: 'date / time',
  status: 'status',
  requestId: 'request id',
  date: 'date'
};
